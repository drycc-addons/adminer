apiVersion: apps/v1
kind: Deployment
metadata:
  name: drycc-adminer
  labels:
    heritage: drycc
  annotations:
    component.drycc.cc/version: {{ .Values.imageTag }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: drycc-adminer
  template:
    metadata:
      labels:
        app: drycc-adminer
    spec:
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset.type "key" .Values.podAffinityPreset.key "values" .Values.podAffinityPreset.values ) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset.type "key" .Values.podAntiAffinityPreset.key "values" .Values.podAntiAffinityPreset.values ) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values ) | nindent 10 }}
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: drycc-adminer
      containers:
      - name: drycc-adminer
        image: {{.Values.imageRegistry}}/{{.Values.imageOrg}}/adminer:{{.Values.imageTag}}
        imagePullPolicy: {{.Values.imagePullPolicy}}
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 5
        ports:
          - containerPort: 8080
            name: http
        {{- include "adminer.limits" . | indent 8 }}
        {{- include "adminer.envs" . | indent 8 }}
        {{- include "adminer.volumeMounts" . | indent 8 }}
      {{- include "adminer.volumes" . | indent 6 }}